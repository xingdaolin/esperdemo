<?xml version="1.0" encoding="UTF-8"?><!-- 	Sample esperio-db configuration file.--><esperio-db-configuration xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.espertech.com/schema/esperio-db" xsi:noNamespaceSchemaLocation="esperio-db-configuration-5-0.xsd">	<!--		Sample for a connection obtained from a DataSource looking via JNDI.     -->	<!--<jdbc-connection name="db1">-->		<!--<datasource-connection context-lookup-name="java:comp/env/jdbc/mydb">-->			<!--<env-property name="java.naming.factory.initial" value="com.myclass.CtxFactory"/>-->			<!--<env-property name="java.naming.provider.url" value="iiop://localhost:1050"/>-->		<!--</datasource-connection>-->	<!--</jdbc-connection>-->	<!--		Sample for a connection obtained from a BasicDataSourceFactory implementation.		This example also explicitly sets the pooled attribute and sets the catalog, auto-commit, read-only and isolation level.     -->	<!--<jdbc-connection name="db2">-->		<!--<datasourcefactory-connection class-name="org.apache.commons.dbcp.BasicDataSourceFactory">	&lt;!&ndash; For a complete list of properties see Apache DBCP. &ndash;&gt;-->			<!--<env-property name="username" value ="myusername"/>-->			<!--<env-property name="password" value ="mypassword"/>-->			<!--<env-property name="driverClassName" value ="com.mysql.jdbc.Driver"/>-->			<!--<env-property name="url" value ="jdbc:mysql://localhost/test"/>-->			<!--<env-property name="initialSize" value ="2"/>-->		<!--</datasourcefactory-connection>-->		<!--<connection-settings auto-commit="true" catalog="TEST" read-only="true" transaction-isolation="0"/>-->	<!--</jdbc-connection>-->	<!--		Sample for a connection obtained from DriverManager.     -->	<database-reference name="mydb">		<drivermanager-connection class-name="com.mysql.jdbc.Driver" url="jdbc:mysql://localhost:3306/test" user="root" password="19871216">			<connection-arg name="user" value ="root"/>			<connection-arg name="password" value ="19871216"/>			<!--<connection-arg name="somearg" value ="someargvalue"/>-->		</drivermanager-connection>		<!--如果参数值为pooled，当配置了连接池，则会将每次获取的连接还给连接池。若没配置连接池，则每次获取的连接用完后就关闭。如果参数值为retain，则会将连接缓存到esper引擎中，这个epl用完后，另一个epl可以接着用-->		<connection-lifecycle value="retain"/><!-- retain -->		<!--缓存策略-->		<lru-cache size="1000"/>		<!--表字段统一小写-->		<column-change-case value="lowercase"/>	</database-reference>	<!--      Sample for a DML statement which inserts new rows.       A work queue name must be defined to point to a threading configuration.	-->	<!--<dml connection="db1" stream="InsertToDBStream" name="MyInsertQuery" executor-name="queue1" retry="2" retry-interval-sec="1">-->		<!--<sql>insert into MyEventStore(key1, value1, value2)--><!--values (?, ?, ?)</sql>-->		<!--<bindings>-->			<!--<parameter pos="1" property="eventProperty1"/>-->			<!--<parameter pos="2" property="eventProperty2"/>-->			<!--<parameter pos="3" property="eventProperty3"/>-->		<!--</bindings>-->	<!--</dml>-->	<!--      Sample for an UPSERT: an Update, followed by an Insert if the row count of the update was zero.    -->    <!--<upsert connection="db1" stream="UpdateInsertDBTableTrigger" name="UpdateInsertSample" table-name="MyKeyedTable" executor-name="queue1" retry="3">-->		<!--<keys>-->			<!--<column property="eventProperty1" column="keyColumn1" type="varchar"/>-->			<!--<column property="eventProperty2" column="keyColumn2" type="varchar"/>-->		<!--</keys>-->		<!--<values>-->			<!--<column property="eventProperty3" column="valueColumn1" type="varchar"/>-->			<!--<column property="eventProperty4" column="valueColumn2" type="integer"/>-->		<!--</values>-->    <!--</upsert>    -->	<!--      Sample for a work queue with 2 threads.    -->    <executors>		<executor name="queue1" threads="2"/>    </executors></esperio-db-configuration>